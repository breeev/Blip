with open('example','rb') as f:FI=f.read().decode('utf-8','replace').splitlines()
d={}# dict of found settings
with open(FI.pop(0),'rb') as f:
    for l in f.read().decode('utf-8','replace').splitlines():
        if '=' in l:d.__setitem__(l.split('=')[0],''.join(l.split('=')[1:]))
for i,k in enumerate(['notes','&also','instruments']):
    if k in d:
        for j,l in enumerate(d[k].split(',')):d[str(i)+str(j)]=l
        del d[k]
F=''
for l in FI:
    if not l.startswith(d['comment']):F+=l.replace(' ','')
def notefields(dictionnary,group) -> list:
    out=[]
    for k in dictionnary:
        if k.startswith(str(group)):out.append(k)
    return out
class digitchoice:
    def startswith(self,match):
        for c in match:
            if not c.isdigit():return 0
        return 1
# EMBED SOLUTION IN MATCHES LIST (it's a placeholder to check for digits)
digits='digits'
d[digits]=digitchoice()
digitdump=''

i=0
channels=[]
BPM=60
lengh=octave=4
defaultmatches={
    'outer':['channel'],
    'title':['global section','drum section',digits],
    'innerDrum':[*notefields(d,2),'rest','lengh','longer','volume','more','less','volume step','detach','detached time','pizz','pizz time','channel','loop','tupplet'],
    'innerGlobal':['BPM','channel'],
    'innerNotes':[*notefields(d,0),*notefields(d,1),'rest','lengh','longer','octave','up','down','volume','more','less','volume step','slide','sliding time','detach','detached time','pizz','pizz time','channel','loop','tupplet']
}
for k in defaultmatches:defaultmatches[k].append('comment')# things you find everywhere
matches=defaultmatches['outer']
matchhistory=[]
# MODES
title=False
innerDrum=False
innerGlobal=False
innerNotes=False
substring=''

while i<len(F):
    substring+=F[i]
    match=[]
    print('{:7}{:<5}{:<2}{:<8}{:<5}{}'.format('drum'*innerDrum+'global'*innerGlobal+'title'*title+'notes'*innerNotes,i,F[i],substring,digitdump,matches))
    for k in matches:
        if d[k].startswith(substring):match.append(k)
    if len(match)==1:
        match=match[0]
        if match!=digits and substring!=d[match]:
            i+=1
            continue
        if title:
            if match==digits:digitdump=substring# the rest is done in the 'no match' if section
            else:
                channels.append([match])
                title=False
                if match=='global section':innerGlobal,matches=True,defaultmatches['innerGlobal']
                else:innerDrum,matches=True,defaultmatches['innerDrum']
        elif innerDrum:pass
        elif innerGlobal:
            if match=='BPM':matches=[digits]# the rest is done in the 'no match' if section
            elif match=='channel':
                i-=1
                innerGlobal,matches=False,defaultmatches['outer']
            else:digitdump+=substring
        elif innerNotes:pass
        else:title,matches=True,defaultmatches['title']
        substring=''
        matchhistory=[]
    elif not len(match):
        if digitdump:
            i-=1
            if title:channels[-1].append([digitdump])
            elif innerGlobal:
                BPM=int(digitdump)
                matches=defaultmatches['innerGlobal']
            digitdump=''
        elif matchhistory:print('/!\\ Warning: conflict between matches '+str(matchhistory[-1]))
        substring=''
        matchhistory=[]
    else:matchhistory.append(match)
    i+=1
print(d)
print(channels)
print(BPM)