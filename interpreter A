def dico(file):
    d={}
    with open(file,'rb') as f:
        for l in f.read().decode('utf-8','replace').splitlines():
            if '=' in l:d.__setitem__(*l.split('='))
    for k in ['notes','&also','instruments']:
        if k in d:d[k]=d[k].split(',')
    return d
with open('example','rb') as f:
    FI=f.read().decode('utf-8','replace').splitlines()
d=dico(FI.pop(0))# dict of found settings
F=''
for l in FI:
    if not l.startswith(d['comment']):F+=l.replace(' ','')

i=0
matches=['channel']
matchhistory=[]
# MODES
title=False
innerDrum=False
innerGlobal=False
innerNotes=False
substring=''

class digitchoice:
    def startswith(self,match):
        for c in match:
            if not c.isdigit():return 0
        return 1

# EMBED SOLUTION IN MATCHES LIST
digits=0
d[digits]=digitchoice()

while i<len(F):
    substring+=F[i]
    match=[]
    for k in matches:
        if d[k].startswith(substring):match.append(k)
    if len(match)==1:
        match=match[0]
        if title:pass
        elif innerDrum:pass
        elif innerGlobal:pass
        elif innerNotes:pass
        else:print(substring)
        substring=''
        matchhistory=[]
    elif not len(match):
        if matchhistory:print('/!\\ Warning: conflict between matches '+str(matchhistory[-1]))
        else:matchhistory=[]
    else:matchhistory.append(match)
    i+=1
print(d)